{"ast":null,"code":"var _jsxFileName = \"/home/james/src/mini-player/src/components/mini-player/PlayerControls.jsx\";\nimport React from 'react';\nimport { CONTROLS } from './config';\nimport { AspectRatio, Close, VolumeOff, VolumeUp } from '../../assets/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PlayerControls = props => {\n  const {\n    controls,\n    muted,\n    onClose,\n    onMute,\n    onResize\n  } = props;\n\n  const renderControl = (control, key) => {\n    let Icon;\n    let callback;\n\n    switch (control) {\n      case CONTROLS.close:\n        Icon = Close;\n        callback = onClose;\n        break;\n\n      case CONTROLS.mute:\n        Icon = muted ? VolumeOff : VolumeUp;\n        callback = onMute;\n        break;\n\n      case CONTROLS.resize:\n        Icon = AspectRatio;\n        callback = onResize;\n        break;\n\n      default:\n        return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"PlayerControls-button\",\n      onClick: callback,\n      children: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PlayerControls\",\n    children: controls.map((control, i) => renderControl(control, i))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PlayerControls;\nexport default PlayerControls;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerControls\");","map":{"version":3,"sources":["/home/james/src/mini-player/src/components/mini-player/PlayerControls.jsx"],"names":["React","CONTROLS","AspectRatio","Close","VolumeOff","VolumeUp","PlayerControls","props","controls","muted","onClose","onMute","onResize","renderControl","control","key","Icon","callback","close","mute","resize","map","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,UAAzB;AACA,SAASC,WAAT,EAAsBC,KAAtB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,oBAAxD;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAChC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA,MAA5B;AAAoCC,IAAAA;AAApC,MAAiDL,KAAvD;;AAEA,QAAMM,aAAa,GAAG,CAACC,OAAD,EAAUC,GAAV,KAAkB;AACtC,QAAIC,IAAJ;AACA,QAAIC,QAAJ;;AAEA,YAAQH,OAAR;AACE,WAAKb,QAAQ,CAACiB,KAAd;AACEF,QAAAA,IAAI,GAAGb,KAAP;AACAc,QAAAA,QAAQ,GAAGP,OAAX;AACA;;AACF,WAAKT,QAAQ,CAACkB,IAAd;AACEH,QAAAA,IAAI,GAAGP,KAAK,GAAGL,SAAH,GAAeC,QAA3B;AACAY,QAAAA,QAAQ,GAAGN,MAAX;AACA;;AACF,WAAKV,QAAQ,CAACmB,MAAd;AACEJ,QAAAA,IAAI,GAAGd,WAAP;AACAe,QAAAA,QAAQ,GAAGL,QAAX;AACA;;AACF;AACE,eAAO,IAAP;AAdJ;;AAiBA,wBACE;AAAkB,MAAA,SAAS,EAAC,uBAA5B;AAAoD,MAAA,OAAO,EAAEK,QAA7D;AAAA,6BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF,OAAaF,GAAb;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GA1BD;;AA4BA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,cACGP,QAAQ,CAACa,GAAT,CAAa,CAACP,OAAD,EAAUQ,CAAV,KAAgBT,aAAa,CAACC,OAAD,EAAUQ,CAAV,CAA1C;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CApCD;;KAAMhB,c;AAsCN,eAAeA,cAAf","sourcesContent":["import React from 'react';\n\nimport { CONTROLS } from './config';\nimport { AspectRatio, Close, VolumeOff, VolumeUp } from '../../assets/icons';\n\nconst PlayerControls = (props) => {\n  const { controls, muted, onClose, onMute, onResize } = props;\n\n  const renderControl = (control, key) => {\n    let Icon;\n    let callback;\n\n    switch (control) {\n      case CONTROLS.close:\n        Icon = Close;\n        callback = onClose;\n        break;\n      case CONTROLS.mute:\n        Icon = muted ? VolumeOff : VolumeUp;\n        callback = onMute;\n        break;\n      case CONTROLS.resize:\n        Icon = AspectRatio;\n        callback = onResize;\n        break;\n      default:\n        return null;\n    }\n\n    return (\n      <button key={key} className=\"PlayerControls-button\" onClick={callback}>\n        <Icon />\n      </button>\n    );\n  };\n\n  return (\n    <div className=\"PlayerControls\">\n      {controls.map((control, i) => renderControl(control, i))}\n    </div>\n  );\n};\n\nexport default PlayerControls;\n"]},"metadata":{},"sourceType":"module"}